<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-init-method="init" default-destroy-method="destroy">

    <!--Injection by properties-->
    <bean id="shura" class="org.grigorovich.spring.model.Cat">
        <property name="id" value="1"/>
        <property name="type" value="cat"/>
        <property name="name" value="shura"/>
        <property name="abilityToCatchMice" value="true"/>
    </bean>

    <bean id="murka" class="org.grigorovich.spring.model.Cat">
        <property name="id" value="2"/>
        <property name="type" value="cat"/>
        <property name="name" value="murka"/>
        <property name="abilityToCatchMice" value="false"/>
    </bean>

    <!--Injection by constructor-->
    <bean id="mishelle" class="org.grigorovich.spring.model.Dog">
        <constructor-arg index="0" value="1"/>
        <constructor-arg name="type" value="dog"/>
        <constructor-arg name="name" value="mishelle"/>
        <constructor-arg name="abilityToTrain" value="true"/>
    </bean>

    <!--schema/c and schema/p-->
    <bean id="russel" class="org.grigorovich.spring.model.Dog"
          c:id="2" c:type="dog" c:_2="russel" p:abilityToTrain="false">
    </bean>

    <bean id="reks" class="org.grigorovich.spring.model.Dog">
        <constructor-arg index="0" value="3"/>
        <constructor-arg name="type" value="dog"/>
        <constructor-arg name="name" value="reks"/>
        <constructor-arg name="abilityToTrain" value="false"/>
    </bean>

    <bean id="veronika" class="org.grigorovich.spring.model.Owner">
        <property name="id" value="1"/>
        <property name="name" value="veronika"/>
        <property name="listPets">
            <list>
                <ref bean="mishelle"/>
                <ref bean="shura"/>
            </list>
        </property>
        <property name="quarterPetCost" ref="costOfVeronika"/>
    </bean>

    <!--list pets-->
    <util:list id="dima's pets">
        <ref bean="murka"/>
        <ref bean="russel"/>
    </util:list>

    <bean id="dima" class="org.grigorovich.spring.model.Owner">
        <property name="id" value="2"/>
        <property name="name" value="dima"/>
        <property name="listPets" ref="dima's pets"/>
        <property name="quarterPetCost" ref="costOfDima"/>
    </bean>

    <util:map id="costOfVeronika">
        <entry key="I" value="80"/>
        <entry key="II" value="90"/>
        <entry key="III" value="70"/>
        <entry key="IV" value="60"/>
    </util:map>

    <util:map id="costOfDima">
        <entry key="I" value="60"/>
        <entry key="II" value="80"/>
        <entry key="III" value="70"/>
        <entry key="IV" value="40"/>
    </util:map>

    <util:map id="costOfThirdOwner">
        <entry key="I" value="60"/>
        <entry key="II" value="80"/>
        <entry key="III" value="70"/>
        <entry key="IV" value="40"/>
    </util:map>

    <bean id="veronikaHome" class="org.grigorovich.spring.model.Home">
        <constructor-arg name="id" value="1"/>
        <constructor-arg name="square" value="50"/>
        <property name="owner" ref="veronika"/>
    </bean>

    <bean id="dimaHome" class="org.grigorovich.spring.model.Home">
        <constructor-arg name="id" value="2"/>
        <constructor-arg name="square" value="150"/>
        <property name="owner" ref="dima"/>
    </bean>

<!--Some SpEL demonstration (static/non-static methods)-->
    <bean id="thirdHome" class="org.grigorovich.spring.model.Home">
        <property name="id" value="#{ T(java.lang.Math).random() * 100.0 }"/>
        <property name="square" value="#{new java.util.Random().nextInt(200)}"/>
        <property name="owner">
            <bean class="org.grigorovich.spring.model.Owner" p:id="#{ T(java.lang.Math).random() * 100.0 }"
                  p:name="thirdOwner" p:listPets="#{reks}" p:quarterPetCost-ref="costOfThirdOwner"/>
        </property>
    </bean>



</beans>
